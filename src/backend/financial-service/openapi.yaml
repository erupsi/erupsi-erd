openapi: 3.0.4
info:
  title: Financial Service API
  version: 1.0.0
  description: >
    API for managing financial internal operation in a company
    like chart of accounts, journal, ledger, reports, payroll, and tax
    within a microservices-based ERP system.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Account:
      type: object
      required:
        - code
        - name
        - type
        - parentCode
      properties:
        code:
          type: string
        name:
          type: string
        type:
          type: string
        parentCode:
          type: string
          nullable: true
    AccountNode:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        type:
          type: string
        parentCode:
          type: string
          nullable: true
        children:
          type: array
          items:
            $ref: '#/components/schemas/AccountNode'
    JournalEntry:
      type: object
      required:
        - date
        - description
        - lines
      properties:
        date:
          type: string
          format: date
        description:
          type: string
        lines:
          type: array
          items:
            type: object
            properties:
              accountCode:
                type: string
              debit:
                type: number
              credit:
                type: number
    LedgerEntry:
      type: object
      properties:
        accountCode:
          type: string
        date:
          type: string
          format: date
        description:
          type: string
        debit:
          type: number
        credit:
          type: number
        balance:
          type: number
    VendorInvoice:
      type: object
      required:
        - vendorId
        - dueDate
        - amount
        - description
      properties:
        vendorId:
          type: string
        dueDate:
          type: string
          format: date
        amount:
          type: number
        description:
          type: string
    CustomerInvoice:
      type: object
      required:
        - customerId
        - dueDate
        - amount
        - description
      properties:
        customerId:
          type: string
        dueDate:
          type: string
          format: date
        amount:
          type: number
        description:
          type: string
    PayrollSummary:
      type: object
      required:
        - period
        - totalSalary
        - totalTax
        - totalPotongan
      properties:
        period:
          type: string
        totalSalary:
          type: number
        totalTax:
          type: number
        totalPotongan:
          type: number
    TaxRate:
      type: object
      required:
        - taxType
        - rate
      properties:
        taxType:
          type: string
        rate:
          type: number
    TaxCalculationRequest:
      type: object
      required:
        - transactionType
        - amount
        - taxType
      properties:
        transactionType:
          type: string
        amount:
          type: number
        taxType:
          type: string
    TaxCalculationResult:
      type: object
      required:
        - taxAmount
        - taxRate
      properties:
        taxAmount:
          type: number
        taxRate:
          type: number
paths:
  /coa:
    get:
      summary: Get list of all accounts
      tags: [Chart of Accounts]
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: Filter berdasarkan jenis akun
        - name: parentCode
          in: query
          schema:
            type: string
          description: Ambil anak dari akun tertentu
      responses:
        '200':
          description: Daftar akun berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter query tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada sistem"
    post:
      summary: Add new account
      tags: [Chart of Accounts]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example:
              code: "1001"
              name: "Cash"
              type: "Asset"
              parentCode: null
      responses:
        '201':
          description: Akun berhasil ditambahkan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Data tidak valid, ada field yang kosong"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"

  /coa/{id}:
    get:
      summary: Get detail account by ID
      tags: [Chart of Accounts]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detail akun ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "ID tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Akun dengan ID tersebut tidak ditemukan"
    put:
      summary: Update account
      tags: [Chart of Accounts]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
            example:
              code: "1001"
              name: "Cash Updated"
              type: "Asset"
              parentCode: null
      responses:
        '200':
          description: Akun berhasil diperbarui
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Format input salah"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Akun tidak ditemukan"
    delete:
      summary: Delete account
      tags: [Chart of Accounts]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Akun berhasil dihapus (No Content)
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "ID tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Akun tidak ditemukan"

  /coa/tree:
    get:
      summary: Get accounts in hierarchical (nested) structure
      tags: [Chart of Accounts]
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
          description: Filter berdasarkan jenis akun
        - name: parentCode
          in: query
          schema:
            type: string
          description: Ambil anak dari akun tertentu
      responses:
        '200':
          description: Struktur akun berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountNode'
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter query tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"

  /journal-entries:
    get:
      summary: Get all journal entries
      tags: [General Journal]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Daftar jurnal berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JournalEntry'
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Total debit dan kredit harus sama"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Missing or invalid token"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Access denied"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Unexpected server failure"
    post:
      summary: Add journal entry
      tags: [General Journal]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntry'
            example:
              date: "2025-08-01"
              description: "Transaksi penambahan modal"
              lines:
                - accountCode: "3110"
                  debit: 0
                  credit: 5000000
                - accountCode: "1110"
                  debit: 5000000
                  credit: 0
      responses:
        '201':
          description: Entri jurnal berhasil ditambahkan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Data entri jurnal tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"

  /journal-entries/{id}:
    get:
      summary: Get journal entry by ID
      tags: [General Journal]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detail jurnal ditemukan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "ID tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Journal entry not found with ID: {id}"
    put:
      summary: Update journal entry
      tags: [General Journal]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntry'
      responses:
        '200':
          description: Entri jurnal berhasil diperbarui
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Deskripsi atau lines tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Journal entry tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"
    delete:
      summary: Delete journal entry
      tags: [General Journal]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Entri jurnal berhasil dihapus (No Content)
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "ID tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Journal entry tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"

  /ledger:
    get:
      summary: See the transaction of all accounts
      tags: [General Ledger]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Transaksi akun berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LedgerEntry'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalItems:
                        type: integer
                      totalPages:
                        type: integer
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter pagination tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Data transaksi tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"

  /ledger/{accountCode}:
    get:
      summary: See the transaction in a specific account
      tags: [General Ledger]
      security:
        - bearerAuth: []
      parameters:
        - name: accountCode
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Transaksi akun ditemukan dan berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LedgerEntry'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalItems:
                        type: integer
                      totalPages:
                        type: integer
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Kode akun tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Transaksi untuk kode akun tersebut tidak ditemukan"

  /reports/balance-sheet:
    get:
      summary: Get balance sheet report
      tags: [Financial Reports]
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
            example: '2025-07'
      responses:
        '200':
          description: Laporan neraca berhasil diambil
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter 'period' harus dalam format YYYY-MM"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"

  /reports/pnl:
    get:
      summary: Get profit & loss report
      tags: [Financial Reports]
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
      responses:
        '200':
          description: Laporan laba rugi berhasil diambil
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter 'period' harus dalam format YYYY-MM"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role Anda tidak memiliki akses ke laporan ini"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada sistem saat membuat laporan"

  /reports/trial-balance:
    get:
      summary: Get trial balance report
      tags: [Financial Reports]
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
      responses:
        '200':
          description: Laporan neraca saldo berhasil diambil
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter 'period' harus dalam format YYYY-MM"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Anda tidak diizinkan melihat laporan ini"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Laporan gagal dibuat karena kesalahan sistem"

  /ap/invoices:
    get:
      summary: Retrieve all vendor invoices
      tags: [Accounts Payable]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Faktur vendor berhasil diambil
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Status data tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"
    post:
      summary: Add vendor invoice
      tags: [Accounts Payable]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorInvoice'
            example:
              vendorId: "vendor123"
              dueDate: "2025-08-01"
              amount: 1500.00
              description: "Pembayaran untuk layanan konsultasi"
      responses:
        '201':
          description: Faktur vendor berhasil ditambahkan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Data faktur vendor tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak diizinkan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"

  /ap/invoices/{id}/payment:
    post:
      summary: Process vendor payment
      tags: [Accounts Payable]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - paidDate
                - method
                - referenceNo
                - amount
              properties:
                paidDate:
                  type: string
                  format: date
                method:
                  type: string
                referenceNo:
                  type: string
                amount:
                  type: number
            example:
              paidDate: "2025-07-29"
              method: "Bank Transfer"
              referenceNo: "TRX-20250729-01"
              amount: 1000000
      responses:
        '201':
          description: Pembayaran berhasil diproses
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Data pembayaran tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak diizinkan memproses pembayaran"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Faktur vendor tidak ditemukan"
        '409':
          description: Conflict
          content:
            application/json:
              example:
                error: "Conflict"
                message: "Faktur sudah dibayar"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"

  /ap-status/{invoiceId}:
    get:
      summary: Check vendor payment status
      tags:  [Accounts Payable]
      security:
        - bearerAuth: []
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status pembayaran ditemukan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Format salah"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Faktur tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"

  /ar/invoices:
    get:
      summary: Get all customer invoices
      tags: [Accounts Receivable]
      security:
        - bearerAuth: []
      parameters:
        - name: customerId
          in: query
          schema:
            type: string
          description: Filter berdasarkan ID customer
        - name: status
          in: query
          schema:
            type: string
            enum:
              - unpaid
              - paid
              - overdue
          description: Filter status faktur
        - name: dueBefore
          in: query
          schema:
            type: string
            format: date
          description: Tampilkan faktur yang jatuh tempo sebelum tanggal tertentu
      responses:
        '200':
          description: Faktur customer berhasil diambil
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"
    post:
      summary: Add customer invoice
      tags: [Accounts Receivable]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInvoice'
            example:
              customerId: "C-2002"
              amount: 1800000
              dueDate: "2025-08-10"
              description: "Penjualan produk X"
      responses:
        '201':
          description: Faktur customer berhasil ditambahkan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Data tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Customer tidak ditemukan"
        '409':
          description: Conflict
          content:
            application/json:
              example:
                error: "Conflict"
                message: "Faktur customer sudah lunas"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"

  /ar/invoices/{id}/receipt:
    post:
      summary: Record customer payment receipt
      tags: [Accounts Receivable]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receiptDate:
                  type: string
                  format: date
                amount:
                  type: number
              required: [receiptDate, amount]
            example:
              receiptDate: "2025-07-31"
              amount: 2500000
      responses:
        '200':
          description: Pembayaran customer dicatat
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Data tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Invoice tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"


  /ar-status/{invoiceId}:
    get:
      summary: Check customer invoice payment status
      tags: [Accounts Receivable]
      security:
        - bearerAuth: []
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status pelunasan ditemukan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Format salah"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Faktur tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"

  /payroll/summary:
    post:
      summary: Save payroll summary from HRM
      tags: [Payroll Aggregation]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayrollSummary'
            example:
              period: "2025-07"
              totalSalary: 25000000
              totalTax: 1500000
              totalPotongan: 500000
      responses:
        '201':
          description: Ringkasan payroll berhasil disimpan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter 'period' harus dalam format YYYY-MM"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Anda tidak diizinkan menyimpan ringkasan payroll"
        '409':
          description: Conflict
          content:
            application/json:
              example:
                error: "Conflict"
                message: "Payroll untuk periode ini sudah pernah dicatat"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"
    get:
      summary: Retrieve monthly payroll summary
      tags:
        - Payroll Aggregation
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
      responses:
        '200':
          description: Ringkasan payroll berhasil diambil
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter 'period' harus dalam format YYYY-MM"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Anda tidak diizinkan mengakses ringkasan payroll"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Data ringkasan payroll tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"

  /tax/rates:
    get:
      summary: Take a list of tax rates
      tags: [Tax Management]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: taxType
          in: query
          schema:
            type: string
          description: "Filter berdasarkan jenis pajak (contoh: PPN, PPh21)"
      responses:
        '200':
          description: Tarif pajak berhasil diambil
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaxRate'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      totalItems:
                        type: integer
                      totalPages:
                        type: integer
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter query tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Gagal mengambil data tarif pajak"
    post:
      summary: Add or set tax rates
      tags: [Tax Management]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
            example:
              taxType: "PPN"
              rate: 0.11
      responses:
        '201':
          description: Tarif pajak berhasil disimpan
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Data tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '409':
          description: Conflict
          content:
            application/json:
              example:
                error: "Conflict"
                message: "Pajak jenis ini sudah ada"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Gagal menyimpan data tarif pajak"

  /tax/summary:
    get:
      summary: Retrieve tax liability summary
      tags: [Tax Management]
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ringkasan pajak berhasil diambil
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Parameter 'period' salah"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: "NotFound"
                message: "Data ringkasan pajak tidak ditemukan"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Kesalahan server"

  /tax/calculate:
    post:
      summary: Calculate tax for transaction
      tags: [Tax Management]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxCalculationRequest'
            example:
              transactionType: "penjualan"
              amount: 1000000
              taxType: "PPN"
      responses:
        '200':
          description: Pajak berhasil dihitung
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: "BadRequest"
                message: "Permintaan tidak valid"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                error: "Unauthorized"
                message: "Token tidak ditemukan atau tidak valid"
        '403':
          description: Forbidden
          content:
            application/json:
              example:
                error: "Forbidden"
                message: "Role tidak memiliki akses"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              example:
                error: "UnprocessableEntity"
                message: "Jenis pajak tidak terdaftar"
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                error: "InternalError"
                message: "Terjadi kesalahan pada server"
security:
  - bearerAuth: []